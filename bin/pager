#!/bin/sh

# allow ft to be passed in via -f <ft>
ft=txt
while getopts "f:" opt ; do
  case "$opt" in
    f) ft="$OPTARG"
       shift; shift
       ;;
    \?)
       echo "unrecognized option: $OPTARG"
       exit 1
       ;;
    :)
       echo "missing required argument for option: $OPTARG"
       exit 1
       ;;
  esac
done

file="$@"
if [ -z "$file" ]; then file="-"; fi

less_vim() {
  nvim -R \
    -c 'let no_plugin_maps = 1' \
    -c 'runtime! macros/less.vim' \
    -c 'normal v' \
    -c "set ft=${ft} fdl=999 nolist notitle nonu noma ro noswf bt=nofile bh=delete so=5 ws" \
    -c 'set statusline=%<%f\ %M\ %y%r%=%-10.(%l,%c%V%)\ %P' \
    -c 'call cursor(1,1)' \
    -c "nmap q :q!<CR>" \
    "$@"
}

# Check if called from man, perldoc or pydoc
if ps fuxw | grep -q '\(man\|py\(thon\|doc\)\|perl\(doc\)\?\([0-9.]*\)\?\)\>'; then
  proc=$$
  while next_parent=$(ps -p $proc -o ppid=) && [ $next_parent != 1 ]; do
    pproc=$(ps -p $next_parent -o comm=)
    if [[ "$pproc" == "man" || "$pproc" == "pydoc" ]] ; then
      cat $file | sed -e 's/\[[^m]*m//g' | sed -e 's/.//g' | less_vim -c 'set ft=man' -; exit
    elif [[ "$pproc" == "perldoc" ]] ; then
      cat $file | sed -e 's/.//g' | less_vim -c 'set ft=man' -; exit
    fi
    proc=$next_parent
  done
fi

# remove any terminal control characters (colors, etc)
cat $file | perl -pe 's/\e([^\[\]]|\[.*?[a-zA-Z]|\].*?\a)//g' | less_vim
