#!/bin/bash

##
# Script which adjusts the volume of all controls at once:
#   $ volume 3+
#   $ volume 3-
##

function usage(){
  echo "Usage: volume <amount>[+-]"
  echo "  Ex. $ volume 3+"
  echo "      $ volume 3-"
  echo ""
  echo "  Also supports toggling mute status:"
  echo "      $ volume toggle"
  exit
}

if [ $# -ne 1 ] ; then
  usage
fi

if [ -e /usr/bin/pactl ] ; then
  if [ "$1" == "toggle" ] ; then
    pactl set-sink-volume @DEFAULT_SINK@ 0
  else
    change=$(echo $1 | sed 's|\([0-9]\+\)\([+-]\)|\2\1|')
    pactl set-sink-volume @DEFAULT_SINK@ $change%
  fi

else
  if amixer get Master &> /dev/null ; then
    channel=Master
  elif amixer get PCM &> /dev/null ; then
    channel=PCM
  fi

  if [ "$1" == "toggle" ] ; then
    amixer -q set $channel toggle
  else
    change=$(echo $1 | sed 's|\([0-9]\+\)\([+-]\)|\2 \1|')
    percent=$(amixer get $channel |
      grep -m 1 '.*: Playback .*[\d\+%]' |
      sed 's|.*\[\([0-9]\+\)%\].*|\1|')
    percent=$(expr $percent $change)

    echo amixer -q set $channel $percent%
    amixer -q set $channel $percent%

    controls=$(amixer scontrols |
      sed "s|.* '\([^']\+\)',.*|\1|" |
      grep -v '\(Master\|Digital\|Line\|Mic\|Capture\|IEC\)')
    IFS=$'\n'
    for control in $controls ; do
      amixer -q set "$control" $percent% unmute
    done
  fi
fi
